{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../scre.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nfunction CreateScreenComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Screen Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateScreenComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Rows is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateScreenComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Rows must be a positive integer \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateScreenComponent_mat_error_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Columns is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateScreenComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Columns must be a positive integer \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let CreateScreenComponent = /*#__PURE__*/(() => {\n  class CreateScreenComponent {\n    constructor(fb, scService, router, actRouter) {\n      this.fb = fb;\n      this.scService = scService;\n      this.router = router;\n      this.actRouter = actRouter;\n    }\n    ngOnInit() {\n      this.theatreId = this.actRouter.snapshot.params['theatreId'];\n      this.screenForm = this.fb.group({\n        screenName: ['', Validators.required],\n        rows: ['', Validators.required, Validators.pattern(/^[0-9]+$/)],\n        columns: ['', Validators.required, Validators.pattern(/^[0-9]+$/)]\n      });\n    }\n    addAScreen() {\n      this.scService.addScreen(this.screenForm.value, this.theatreId).subscribe(res => {\n        //this.theatreIdToScreen.emit(this.theatreId);\n        this.router.navigate(['/theatre/view', this.theatreId]);\n      }, error => {\n        this.errorMessage = error;\n      });\n    }\n    static #_ = this.ɵfac = function CreateScreenComponent_Factory(t) {\n      return new (t || CreateScreenComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ScreService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateScreenComponent,\n      selectors: [[\"app-create-screen\"]],\n      decls: 36,\n      vars: 8,\n      consts: [[1, \"custom-container\"], [2, \"color\", \"red\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\"], [1, \"input-data\"], [\"type\", \"text\", \"formControlName\", \"screenName\", \"required\", \"\", 1, \"form-control\"], [1, \"underline\"], [\"for\", \"\"], [4, \"ngIf\"], [1, \"row\"], [1, \"col\", \"input-data\"], [\"type\", \"text\", \"formControlName\", \"rows\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"columns\", \"required\", \"\", 1, \"form-control\"], [1, \"button\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n      template: function CreateScreenComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"section\")(1, \"div\", 0)(2, \"h3\", 1);\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function CreateScreenComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.addAScreen();\n          });\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5);\n          i0.ɵɵelement(8, \"input\", 6)(9, \"div\", 7);\n          i0.ɵɵelementStart(10, \"label\", 8);\n          i0.ɵɵtext(11, \"Screen Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, CreateScreenComponent_mat_error_12_Template, 2, 0, \"mat-error\", 9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"div\", 3)(14, \"div\", 4)(15, \"div\", 10)(16, \"div\", 11);\n          i0.ɵɵelement(17, \"input\", 12)(18, \"div\", 7);\n          i0.ɵɵelementStart(19, \"label\", 8);\n          i0.ɵɵtext(20, \"Rows\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(21, CreateScreenComponent_mat_error_21_Template, 2, 0, \"mat-error\", 9);\n          i0.ɵɵtemplate(22, CreateScreenComponent_mat_error_22_Template, 2, 0, \"mat-error\", 9);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(23, \"div\", 3)(24, \"div\", 4)(25, \"div\", 10)(26, \"div\", 11);\n          i0.ɵɵelement(27, \"input\", 13)(28, \"div\", 7);\n          i0.ɵɵelementStart(29, \"label\", 8);\n          i0.ɵɵtext(30, \"Columns\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(31, CreateScreenComponent_mat_error_31_Template, 2, 0, \"mat-error\", 9);\n          i0.ɵɵtemplate(32, CreateScreenComponent_mat_error_32_Template, 2, 0, \"mat-error\", 9);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(33, \"div\", 14)(34, \"button\", 15);\n          i0.ɵɵtext(35, \" Add Screen \");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.screenForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.screenForm.get(\"screenName\")) == null ? null : tmp_2_0.hasError(\"required\"));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.screenForm.get(\"rows\")) == null ? null : tmp_3_0.hasError(\"required\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.screenForm.get(\"rows\")) == null ? null : tmp_4_0.hasError(\"pattern\"));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.screenForm.get(\"columns\")) == null ? null : tmp_5_0.hasError(\"required\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.screenForm.get(\"columns\")) == null ? null : tmp_6_0.hasError(\"pattern\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.screenForm.valid);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i5.MatError],\n      styles: [\".custom-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;min-height:90vh;background:#fff;width:100%;padding:25px 40px 10px;box-shadow:0 0 10px #0000001a}.custom-container[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]{text-align:center;font-size:35px;-webkit-text-fill-color:transparent}.custom-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{padding:30px 0 0}.custom-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-row[_ngcontent-%COMP%]{display:flex;margin:32px 0}form[_ngcontent-%COMP%]   .form-row[_ngcontent-%COMP%]   .input-data[_ngcontent-%COMP%]{width:100%;height:40px;margin:0 20px;position:relative}form[_ngcontent-%COMP%]   .form-row[_ngcontent-%COMP%]   .textarea[_ngcontent-%COMP%]{height:70px}.input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .textarea[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%], .date[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{display:block;width:100%;height:100%;border:none;outline:none;font-size:17px;border-bottom:2px solid rgba(0,0,0,.12)}.input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus ~ label[_ngcontent-%COMP%], .textarea[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]:focus ~ label[_ngcontent-%COMP%], .input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:valid ~ label[_ngcontent-%COMP%], .textarea[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]:valid ~ label[_ngcontent-%COMP%]{transform:translateY(-20px);font-size:14px;color:#3498db}.textarea[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{resize:none;padding-top:10px}.input-data[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{position:absolute;pointer-events:none;bottom:10px;font-size:16px;transition:all .3s ease}.textarea[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{width:100%;bottom:40px;background:#fff}.input-data[_ngcontent-%COMP%]   .underline[_ngcontent-%COMP%]{position:absolute;bottom:0;height:2px;width:100%}.input-data[_ngcontent-%COMP%]   .underline[_ngcontent-%COMP%]:before{position:absolute;content:\\\"\\\";height:2px;width:100%;background:#3498db;transform:scaleX(0);transform-origin:center;transition:transform .3s ease}.input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus ~ .underline[_ngcontent-%COMP%]:before, .input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:valid ~ .underline[_ngcontent-%COMP%]:before, .textarea[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]:focus ~ .underline[_ngcontent-%COMP%]:before, .textarea[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]:valid ~ .underline[_ngcontent-%COMP%]:before{transform:scale(1)}.button[_ngcontent-%COMP%]{margin-left:1rem}@media (max-width: 700px){.custom-container[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]{font-size:30px}.custom-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{padding:10px 0 0}.custom-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .form-row[_ngcontent-%COMP%]{display:block}form[_ngcontent-%COMP%]   .form-row[_ngcontent-%COMP%]   .input-data[_ngcontent-%COMP%]{margin:35px 0!important}}\"]\n    });\n  }\n  return CreateScreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}